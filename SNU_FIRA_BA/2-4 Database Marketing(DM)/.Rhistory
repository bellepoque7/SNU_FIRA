top500_reg <- vali_pred%>% arrange(desc(pred)) %>% head(500)
sum(top500_reg$purchase) # 상위 500명 중에 80명이 실제로 구매했다.
mean(top500_reg$purchase)
# 80/500  정확도 16%
#-----
#Q5
# 너네 왜일안하냐 변수선택 안하네 ㅡㅡ
glm.fit = glm(purchase ~., data = esti, family=binomial)
summary(glm.fit)
set.seed(1)
glm.probs = predict(glm.fit, type = 'response', vali)
head(glm.probs)
summary(glm.probs)  #purchase확률이 0.5이상인 것이 없음...
vali_probs <- cbind(vali, glm.probs)
vali_probs %>% arrange(desc(glm.probs)) %>%
head(500) %>% summarise(sum(purchase),mean(purchase))
89/500 # 17.8%의 예측
# 변수선택
step(glm.fit, direction = 'forward') # forward
step(glm.fit, direction = 'backward') # backward
step(glm.fit, direction = 'both') # stepwise 방법
glm.fit.up = glm(purchase ~gender+recency + frequency, data = esti, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.both)
summary(glm.probs.both)  #purchase 최대확율이 0.433 에서 0.22로 떡-락
vali_probs.both <- cbind(vali, glm.probs.both)
vali_probs.both %>% arrange(desc(glm.probs.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
91/500 # 18.2%의 예측
# 업샘플링해보자
library(caret)
table(esti$purchase)
esti_factor <- esti
esti_factor[,'purchase'] <- as.factor(esti_factor$purchase)
str(esti_factor)
esti_factor %>% select('purchase') %>% head(10)
x <- upSample(subset(esti_factor, select=-purchase),esti_factor$purchase)
table(x$Class)
mean(x$Class)
x[,'Class'] <- as.numeric(x$Class)
x$Class <- ifelse(x$Class == 1, 0, 1)
str(x)
#----
# 로지스틱 with 업샘플링
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.up.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.up.both)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.up.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.up.both)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.up.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.up.both)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
vali_probs.up.both
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
table(esti$purchase)
esti_factor <- esti
esti_factor[,'purchase'] <- as.factor(esti_factor$purchase)
str(esti_factor)
esti_factor %>% select('purchase') %>% head(10)
x <- upSample(subset(esti_factor, select=-purchase),esti_factor$purchase)
table(x$Class)
mean(x$Class)
x[,'Class'] <- as.numeric(x$Class)
mean(x$Class)
x$Class <- ifelse(x$Class == 1, 0, 1)
x[,'Class'] <- as.numeric(x$Class)
mean(x$Class)
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.up.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.up.both)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
mean(x$Class)
str(x)
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
summary(glm.fit.up)
set.seed(1)
?predict
glm.probs.up.both = predict(glm.fit.up, type = 'response', newdata = vali)
summary(glm.fit.up)
glm.probs.up.both = predict(glm.fit.up, type = 'response', newdata = vali)
head(glm.probs.up.both)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
#변수선택다시
step(glm.fit.up, direction = 'both') # stepwise 방법
vali_probs.both %>% arrange(desc(glm.probs.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(Class))
vali_probs.up.both
glm.probs.up.both = predict(glm.fit.up, type = 'response', newdata = vali)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
glm.probs.up.both = predict(glm.fit.up, type = 'response', newdata = vali)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
summary(glm.fit.up)
set.seed(1)
glm.probs.up.both = predict(glm.fit.up, type = 'response', newdata = vali)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(Class))
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
glm.fit.up = glm(purchase ~gender+recency + frequency, data = esti, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.both)
summary(glm.probs.both)  #purchase 최대확율이 0.433 에서 0.22로 떡-락
vali_probs %>% arrange(desc(glm.probs)) %>%
head(500) %>% summarise(sum(purchase),mean(purchase))
step(glm.fit, direction = 'both') # stepwise 방법
glm.fit.up = glm(purchase ~gender+recency + frequency, data = esti, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.both)
summary(glm.probs.both)  #purchase 최대확율이 0.433 에서 0.22로 떡-락
glm.probs.both = predict(glm.fit.up, type = 'response', vali)
head(glm.probs.both)
summary(glm.probs.both)  #purchase 최대확율이 0.433 에서 0.22로 떡-락
vali_probs.both <- cbind(vali, glm.probs.both)
vali_probs.both %>% arrange(desc(glm.probs.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
# 업샘플링해보자
library(caret)
table(esti$purchase)
esti_factor <- esti
esti_factor[,'purchase'] <- as.factor(esti_factor$purchase)
str(esti_factor)
esti_factor %>% select('purchase') %>% head(10)
x <- upSample(subset(esti_factor, select=-purchase),esti_factor$purchase)
table(x$Class)
mean(x$Class)
x[,'Class'] <- as.numeric(x$Class)
x$Class <- ifelse(x$Class == 1, 0, 1)
x[,'Class'] <- as.numeric(x$Class)
mean(x$Class)
str(x)
glm.fit.up = glm(Class ~gender+recency + frequency, data = x, family=binomial)
summary(glm.fit.up)
set.seed(1)
glm.probs.up.both = predict(glm.fit.up, type = 'response', newdata = vali)
summary(glm.probs.up.both)  #purchase 최대확률이 0.433 에서 0.86으 떡-상
vali_probs.up.both <- cbind(vali, glm.probs.up.both)
vali_probs.up.both %>% arrange(desc(glm.probs.up.both)) %>%
head(500)  %>% summarise( n(),mean(purchase))
set.seed(2)
x=matrix(rnorm(50*2), ncol = 2)
x
x[1:25,1] = x[1:25,1] +3
x[1:25,1]
x[1:25,2] = x[1:25,2] -4
library(datase)
library(datasets)
head(iris)
library(ggplot2)
ggplot(iris,aes(Petal.Length, Petal.Width, color =Sepecies))
head(iris)
ggplot(iris,aes(Petal.Length, Petal.Width, color =Sepecies)) + geom_point()
ggplot(iris,aes(Petal.Length, Petal.Width, color =Species))
ggplot(iris,aes(x = Petal.Length, y=Petal.Width, color =Species))
?kmean
?kmeans
?ggplot
ggplot(iris,mapping = aes(x = Petal.Length, y=Petal.Width, color =Species))
ggplot(iris,mapping = aes(x = Petal.Length, y=Petal.Width, color =Species)) + geom_point()
ggplot(iris,mapping = aes(x = Petal.Length, y=Petal.Width, color =Species)) +
geom_point()
ggplot(iris,mapping = aes(x = Petal.Length, y=Petal.Width, color =Species)) +
geom_point()
iris[,3:4]
str(iris[,3:4])
kmeans(iris[,3:4],3, nstart =20)
a <- kmeans(iris[,3:4],3, nstart =20) # 센터 20개
#  3개 군집: 48, 52, 50으로나누어졌다.
# Clutermean  군집의 위
a$cluster
a$centers
ggplot(iris,mapping = aes(x = Petal.Length, y=Petal.Width, color =Species)) +
geom_point()
ggplot(iris,mapping = aes(x = Petal.Length, y=Petal.Width, color =a$cluster)) +
geom_point()
x< - iris[,3:4]
hc.complete= hclust(dist(x), method = 'complete')
dist(x)
str(hc.complete)
plot(hc.complete)
cutree(hc.complet,2)
cutree(hc.complete,2)
head(USArrests)
pr.out <-prcomp(USArrests, scale =T)
str(pr.out)
?prcomp
library(pls)
pcr(salary ~., data = Hitters, scale =T)
pcr(Salary ~., data = Hitters, scale =T)
pcr.fit <-pcr(Salary ~., data = Hitters, scale =T)
str(pcr.fit)
summary(pcr.fit)
# x 가 첫번째 열. 80%정도 설명하는게 좋으니까
# 해석:1comps가 38%정도 설명하니까
# 4comps까지 선택하자. 누적 설명 80%정도니까
pcr.fit2<- pcr(Salary~., data= Hitters, scale = T, ncomp =4)
pcr.fit2$coefficients
library(tidyr)
library(dplyr)
library(broom)
attach(twinData)
library(ggplot2)
library(OpenMx)
data(twinData)
twinData <- as_tibble(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
data(twinData)
twinData <- as_tibble(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
library(tidyr)
library(dplyr)
library(broom)
attach(twinData)
library(ggplot2)
library(OpenMx)
data(twinData)
twinData <- as_tibble(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
head(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
library(tidyr)
library(dplyr)
library(broom)
library(ggplot2)
library(OpenMx)
data(twinData)
twinData <- as_tibble(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
install.packages('ggplot2')
install.packages("ggplot2")
library(tidyr)
library(dplyr)
library(broom)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(OpenMx)
data(twinData)
twinData <- as_tibble(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
#어린그룹 산점도
twin.young <- twinData[which(twinData$cohort  == 'younger'),]
twin.young %>% ggplot(mapping = aes(ht1, ht2)) +
geom_point() + geom_abline(a=1, b= 0, color = 'red', lwd = 1.0) + geom_smooth(method='lm')
twin.young %>% ggplot(mapping = aes(ht1, ht2)) +
geom_point()
#나이든 그룹 산점도
twin.old <- twinData %>% filter(cohort == 'older')
twin.old %>% ggplot(mapping = aes(ht1, ht2)) +
geom_point()
# MZFF MZMM 은 일관성있는 키를 보인다. 남자가 키가 큰 경향이있다.
# DZFF DZMM DZOS는 일란성보다는 좀더 산포가 큰듯하다.  남자,여자 변수를 확인할 수 없어 더 근접한 해석은 불가하다.
# DZOS만 따로봐보자
twin.DZOS <- twinData[which(twinData$zygosity  == 'DZOS'),]
twin.DZOS %>% ggplot(mapping = aes(ht1, ht2)) +
geom_point() + geom_abline(a=1, b= 0, color = 'red', lwd = 1.0) + geom_smooth(method='lm')
# 유의있는 그래프만 색깔로표시 conf.low 에 대하여 유의미한 값만 색칠
a<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~ht1+ht2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
a
twinData %>%
inner_join(a) %>%
group_by(cohort,zygosity) %>% ggplot(mapping = aes(ht1, ht2, colour = conf.low)) +
geom_point() + facet_grid(rows =vars(cohort), cols =vars(zygosity)) +
geom_abline(a=1, b=0, color ='red', linetype = 'longdash')
twinData <- as_tibble(twinData)
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
```{r overview, warning = F}
```{r overview}
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
twinData %>% ggplot(mapping = aes(ht1, ht2,colour = zygosity)) +
geom_point()
head(twinData)
str(twinData)
help(twinData)
a<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~ht1+ht2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
twinData %>%
inner_join(a) %>%
group_by(cohort,zygosity) %>% ggplot(mapping = aes(ht1, ht2, colour = conf.low)) +
geom_point() + facet_grid(rows =vars(cohort), cols =vars(zygosity)) +
geom_abline(a=1, b=0, color ='red', linetype = 'longdash')
a<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~ht1+ht2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
twinData %>%
inner_join(a) %>%
group_by(cohort,zygosity) %>% ggplot(mapping = aes(ht1, ht2, colour = conf.low)) +
geom_point() + facet_grid(rows =vars(cohort), cols =vars(zygosity)) +
geom_abline(a=1, b=0, color ='red', linetype = 'longdash')
b<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~wt1+wt2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
twinData %>%
inner_join(b) %>%
group_by(cohort,zygosity) %>% ggplot(mapping = aes(wt1, wt2, colour = conf.low)) +
geom_point() + facet_grid(rows =vars(cohort), cols =vars(zygosity)) +
geom_abline(a=1, b=0, color ='red',linetype="longdash")
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
```{r Exercise 10, warning = F}
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
t.test(ht1, ht2, alternative = 'two.sided', paired=T, data = twin_MZFF)
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
t.test(ht1, ht2, alternative = 'two.sided', paired=T, data = twin_MZFF)
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
t.test(ht1, ht2, alternative = 'two.sided', paired=T, data = twin_MZFF)
twin_MZFF
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
twin_MZFF
t.test(ht1, ht2, alternative = 'two.sided', paired=T, data = twin_MZFF)
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
t.test(ht1, ht2, alternative = 'two.sided', paired=T, data = twin_MZFF)
head(twin_MZFF)
?t.test
t.test(twin_MZFF$ht1, twin_MZFF$ht2, alternative = 'two.sided', paired=T)
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
t.test(twin_MZFF$ht1, twin_MZFF$ht2, alternative = 'two.sided', paired=T)
twin_DZOS <- twinData %>% filter(zygosity =='DZOS')
t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T, data = twin_DZOS) # do(tidy)를 이용하여  한번에 할것
twin_DZOS <- twinData %>% filter(zygosity =='DZOS')
t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T, data = twin_DZOS)
t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T, data = twin_DZOS)
twin_MZFF <- twinData %>% filter(zygosity =='MZFF')
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
twinData %>% do(t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T, data = twin_DZOS))
twinData %>% do(t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T))
twinData %>% t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T)
twinData %>% t.test(twin_DZOS$ht1, twin_DZOS$ht2, alternative = 'two.sided', paired=T)
?t.test
ort) %>% do(tidy(t.test(.ht1, .ht2, alternative = 'two.sided', paired=T))
twinData %>% group_by(zygosity, cohort) %>% do(tidy(t.test(.ht1, .ht2, alternative = 'two.sided', paired=T)))
twinData %>% group_by(zygosity, cohort) %>% do(tidy(t.test(.ht1, .ht2, alternative = 'two.sided', paired=T,data = .)))
twinData %>% group_by(zygosity, cohort)
attach(twinData)
twinData %>% group_by(zygosity, cohort) %>% do(tidy(t.test(.ht1, .ht2, alternative = 'two.sided', paired=T,data = .)))
twinData %>% group_by(zygosity, cohort) %>% do(tidy(t.test(.$ht1, .$ht2, alternative = 'two.sided', paired=T,data = .)))
twinData %>%  with(t.test(.$ht1, .$ht2, paired = T))
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
```{r, Excercise 12-3, waring = F}
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
```{r setup, message = F, warning = F }
a<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~ht1+ht2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
```{r Excercise 9, warning = F, message = F}
b<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~wt1+wt2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
twinData %>%
inner_join(b) %>%
group_by(cohort,zygosity) %>% ggplot(mapping = aes(wt1, wt2, colour = conf.low)) +
geom_point() + facet_grid(rows =vars(cohort), cols =vars(zygosity)) +
geom_abline(a=1, b=0, color ='red',linetype="longdash")
```{r Excercise 9, warning = F, message = F, fig.align='center'}
b<- twinData %>% group_by(cohort,zygosity) %>%
do(tidy(cor.test(~wt1+wt2, alternative = 'greater', data =.))) %>%
select(cohort,zygosity, conf.low)
twinData %>%
inner_join(b) %>%
group_by(cohort,zygosity) %>% ggplot(mapping = aes(wt1, wt2, colour = conf.low)) +
geom_point() + facet_grid(rows =vars(cohort), cols =vars(zygosity)) +
geom_abline(a=1, b=0, color ='red',linetype="longdash")
library(broom)
gathered_twinData %>% ggplot(mapping = aes(order, height)) +
geom_boxplot() +
facet_grid(cohort ~ zygosity)
twinData %>% group_by(zygosity, cohort) %>%
do(tidy(t.test(.$ht1, .$ht2, alternative = 'two.sided', paired=T,data = .)))
twinData_p <-twinData %>% group_by(zygosity, cohort) %>%
do(tidy(t.test(.$ht1, .$ht2, alternative = 'two.sided', paired=T,data = .)))
twinData_p
twinData_o <- twinData %>% group_by(zygosity,cohort)
twinData_o
?inner_join
twinData %>% inner_join(twinData_p, by = c(zygosity, cohort))
twinData %>% inner_join(twinData_p, by = zygosity)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')_)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort'))
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>% group_by(zygostiy, cohort)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>%
group_by(zygosity, cohort)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>%
group_by(zygosity, cohort)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>%
group_by(zygosity, cohort) %>%
ggplot(mapping = aes(order, height, fill = p.value)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>%
group_by(zygosity, cohort) %>%
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>%
group_by(zygosity, cohort)
twinData %>% inner_join(twinData_p, by = c('zygosity','cohort')) %>%
group_by(zygosity, cohort)
twinData %>% gather(order, height, ht1, ht2)
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zycosity'))
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zycosity'))
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity'))
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity'))  %>%
ggplot(mapping = aes(order, height, fill = p.value)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity'))  %>%
ggplot(mapping = aes(order, height, fill = p.value)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity')) %>%
mutate(p0.05 = ifelse(p.value<0.05, 'significant', 'not')) %>%
ggplot(mapping = aes(order, height, fill = p.value)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData <- twinData %>% gather(order, height, ht1, ht2)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity')) %>%
mutate(p0.05 = ifelse(p.value<0.05, 'significant', 'not')) %>%
ggplot(mapping = aes(order, height, fill = p0.05)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity')) %>%
mutate(p0.05 = ifelse(p.value<0.05, 'significant', 'not')) %>%
ggplot(mapping = aes(order, height, color = p0.05)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity')) %>%
mutate(p0.05 = ifelse(p.value<0.05, 'significant', 'not')) %>%
ggplot(mapping = aes(order, height, fill = p0.05)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity')) %>%
mutate(significace = ifelse(p.value<0.05, 'Yes(<0.05)', 'No')) %>%
ggplot(mapping = aes(order, height, fill = significance)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
gathered_twinData %>% inner_join(twinData_p, by = c('cohort', 'zygosity')) %>%
mutate(significance = ifelse(p.value<0.05, 'Yes(<0.05)', 'No')) %>%
ggplot(mapping = aes(order, height, fill = significance)) +
geom_boxplot() + facet_grid(cohort ~ zygosity)
t.test(twin_MZFF$ht1, twin_MZFF$ht2, alternative = 'two.sided', paired=T)
